name: Maven Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build and run tests
      - name: Build with Maven
        run: mvn -B clean test

      # Step 4: Upload Extent Report as artifact
      - name: Upload Extent Report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: extent-report
          path: target/extent-report.html

      # Step 5: Install Allure CLI
      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      # Step 6: Generate Allure HTML Report
      - name: Generate Allure Report
        run: allure generate allure-results --clean -o allure-report

      # Step 7: Upload Allure Report as artifact
      - name: Upload Allure Report (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      # Step 8: Prepare public folder for GitHub Pages
      - name: Prepare public folder
        run: |
          mkdir -p public/allure-report
          mkdir -p public/extent-report
          cp -r allure-report/* public/allure-report/
          cp target/extent-report.html public/extent-report/index.html
          echo '<html><body><h2>ðŸ“Š API Test Reports</h2><ul><li><a href="allure-report/index.html">Allure Report</a></li><li><a href="extent-report/index.html">Extent Report</a></li></ul></body></html>' > public/index.html

      # Step 9: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
